<?php
     /**
     * Class for working the task status
     */
    class AcceptLinkListViewColumnAdapter extends TextListViewColumnAdapter
    {
        /**
         * @return array
         */
        public function renderGridViewData()
        {
            if ($this->getIsLink())
            {
                return array(
                    'name' => $this->attribute,
                    'header'      => Zurmo::t('TasksModule', 'Activity Items'),
                    'type' => 'raw',
                    'value' => 'AcceptLinkListViewColumnAdapter::getActivityItemsModels($data, true)',
                    'sortable' => false,
                );
            }
            else
            {
                return array(
                    'name'  => $this->attribute,
                    'header'      => Zurmo::t('TasksModule', 'Activity Items'),
                    'value' => 'AcceptLinkListViewColumnAdapter::getActivityItemsModels($data, false)',
                    'sortable' => false,
                );
            }
        }

        public static function getActivityItemsModels($data, $isLink = false)
        {
            $text = '';
            foreach($data->activityItems as $activityItem)
            {
                $model = TasksUtil::castDownActivityItem($activityItem);
                $modelClassName  = get_class($model);
                if ($isLink)
                {
                    $moduleClassName = $modelClassName::getModuleClassName();
                    $moduleId        = $moduleClassName::getDirectoryName();
                    if (null != $stateAdapterClassName = $moduleClassName::getStateMetadataAdapterClassName())
                    {
                        $moduleClassName = $stateAdapterClassName::getModuleClassNameByModel($model);
                        $moduleId                = $moduleClassName::getDirectoryName();
                    }
                    $linkRoute = '/' . $moduleId . '/default/details/';
                    $text .= static::getLinkStringForActivityItem($model, $linkRoute, $moduleClassName);
                }
                else
                {
                    $text .= static::getNameForActivityItem(strval($model), $modelClassName);
                }
            }
            return trim($text, ';');
        }

        public static function getLinkStringForActivityItem($model, $linkRoute, $moduleClassName)
        {
            $modelClassName  = get_class($model);
            $linkString = ActionSecurityUtil::resolveLinkToEditModelForCurrentUser(strval($model), $model, $moduleClassName, $linkRoute) .
                ' (' . $modelClassName . ')';
            $text = ZurmoHtml::tag('div', array(), $linkString);
            return $text;
        }

        public static function getNameForActivityItem($text, $modelClassName)
        {
            $text = strval($text) . " (" . $modelClassName . ");";
            return $text;
        }
    }
?>
